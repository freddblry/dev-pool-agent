name: 🗑️ Destroy Azure DevOps Agent

on:
  workflow_dispatch:
    inputs:
      confirm_destroy:
        description: 'Tapez DESTROY pour confirmer la suppression'
        required: true
      vm_name:
        description: 'Nom de la VM à supprimer'
        required: true

env:
  TF_VERSION: '1.5.0'
  ARM_USE_OIDC: true

jobs:
  destroy:
    name: 🗑️ Destruction Infrastructure
    runs-on: ubuntu-latest
    environment: production
    
    permissions:
      id-token: write
      contents: read

    steps:
      - name: ✋ Vérification de confirmation
        run: |
          if [ "${{ github.event.inputs.confirm_destroy }}" != "DESTROY" ]; then
            echo "❌ Confirmation incorrecte. Tapez exactement 'DESTROY' pour confirmer."
            exit 1
          fi
          echo "✅ Confirmation de destruction validée"

      - name: 📥 Checkout du code
        uses: actions/checkout@v4

      - name: 🔐 Connexion Azure via OIDC
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: ⚙️ Configuration Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: 🔧 Terraform Init
        working-directory: ./terraform
        run: |
          terraform init \
            -backend-config="resource_group_name=${{ secrets.TF_BACKEND_RG }}" \
            -backend-config="storage_account_name=${{ secrets.TF_BACKEND_SA }}" \
            -backend-config="container_name=${{ secrets.TF_BACKEND_CONTAINER }}" \
            -backend-config="key=ado-agent-${{ github.event.inputs.vm_name }}.tfstate" \
            -backend-config="tenant_id=${{ secrets.AZURE_TENANT_ID }}" \
            -backend-config="client_id=${{ secrets.AZURE_CLIENT_ID }}" \
            -backend-config="subscription_id=${{ secrets.AZURE_SUBSCRIPTION_ID }}"


      - name: 📋 Terraform Plan Destroy
        working-directory: ./terraform
        run: |
          terraform plan -destroy \
            -var="vm_name=${{ github.event.inputs.vm_name }}" \
            -out=tfplan-destroy

      - name: 🗑️ Terraform Destroy
        working-directory: ./terraform
        run: terraform apply tfplan-destroy

      - name: ✅ Confirmation de suppression
        run: |
          echo "## 🗑️ Infrastructure supprimée avec succès !" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "La VM **${{ github.event.inputs.vm_name }}** et toutes ses ressources ont été supprimées." >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "⚠️ **Action manuelle requise :**" >> $GITHUB_STEP_SUMMARY
          echo "Supprimez manuellement l'agent du pool Azure DevOps si nécessaire." >> $GITHUB_STEP_SUMMARY
